<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(SolutionDir)\CMS.T4\T4_All\DbHelper.ttinclude"#>
<#@ include file="$(SolutionDir)\CMS.T4\T4_All\MultipleOutputHelper.ttinclude"#>

<#
    List<DbTable> tableList = DbHelper.GetDbTables(MyDbConfig.ConnectionString, MyDbConfig.DbDatabase, MyDbConfig.TableName);
	var manager = Manager.Create(Host, GenerationEnvironment);
	foreach (var table in tableList)
	{
		var columnList = DbHelper.GetDbColumns(MyDbConfig.ConnectionString, MyDbConfig.DbDatabase, table.TableName);
		//实体类
		manager.StartNewFile(table.TableName + ".cs");
#>
//-------------------------------------------------------------------------------------
// <auto-generated>
//     此代码由 Entities.tt T4模板生成
//     生成时间 <#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #>
//     对此文件的更改可能会导致不正确的行为，并且如果重新生成代码，这些更改将会丢失。
// </auto-generated>
//-------------------------------------------------------------------------------------

using System;
using Dapper;

namespace CMS.Model
{
    /// <summary>
	/// 实体-<#= table.TableName #>
	/// </summary>
	[Table("<#= table.TableName #>")]
	public partial class <#= table.TableName #> : ModelBase
	{
<#
		PushIndent("        ");
		
		foreach (DbColumn column in columnList)
		{
		    if(column.IsIdentity)
		    {
				WriteLine("[Key]");
		    }
			if(!string.IsNullOrEmpty(column.Remark))
			{
				WriteLine("///");
				WriteLine("///" + column.Remark);
				WriteLine("///");
			}
			WriteLine(string.Format("public {0}{1} {2} {{ get; set; }}"
				, column.CSharpType, column.CommonType.IsValueType && column.IsNullable ? "?" : "", column.ColumnName));
		}

		PopIndent();
#>
	}
}

<#  
		manager.EndBlock();

    }
    manager.Process(true);
#>